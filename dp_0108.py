# https://www.acmicpc.net/problem/15486
# 상담 스케줄링 문제

# 상담원으로 일하고 있는 백준이는 퇴사를 하려고 한다.

# 오늘부터 N+1일째 되는 날 퇴사를 하기 위해서, 남은 N일 동안 최대한 많은 상담을 하려고 한다.

# 백준이는 비서에게 최대한 많은 상담을 잡으라고 부탁을 했고, 비서는 하루에 하나씩 서로 다른 사람의 상담을 잡아놓았다.

# 각각의 상담은 상담을 완료하는데 걸리는 기간 Ti와 상담을 했을 때 받을 수 있는 금액 Pi로 이루어져 있다.

# N = 7인 경우에 다음과 같은 상담 일정표를 보자.

#  	1일	2일	3일	4일	5일	6일	7일
# Ti	3	5	1	1	2	4	2
# Pi	10	20	10	20	15	40	200
# 1일에 잡혀있는 상담은 총 3일이 걸리며, 상담했을 때 받을 수 있는 금액은 10이다. 5일에 잡혀있는 상담은 총 2일이 걸리며, 받을 수 있는 금액은 15이다.

# 상담을 하는데 필요한 기간은 1일보다 클 수 있기 때문에, 모든 상담을 할 수는 없다. 예를 들어서 1일에 상담을 하게 되면, 2일, 3일에 있는 상담은 할 수 없게 된다. 2일에 있는 상담을 하게 되면, 3, 4, 5, 6일에 잡혀있는 상담은 할 수 없다.

# 또한, N+1일째에는 회사에 없기 때문에, 6, 7일에 있는 상담을 할 수 없다.

# 퇴사 전에 할 수 있는 상담의 최대 이익은 1일, 4일, 5일에 있는 상담을 하는 것이며, 이때의 이익은 10+20+15=45이다.

# 상담을 적절히 했을 때, 백준이가 얻을 수 있는 최대 수익을 구하는 프로그램을 작성하시오.

# 입력
# 첫째 줄에 N (1 ≤ N ≤ 1,500,000)이 주어진다.

# 둘째 줄부터 N개의 줄에 Ti와 Pi가 공백으로 구분되어서 주어지며, 1일부터 N일까지 순서대로 주어진다. (1 ≤ Ti ≤ 50, 1 ≤ Pi ≤ 1,000)

# 출력
# 첫째 줄에 백준이가 얻을 수 있는 최대 이익을 출력한다.


        #이걸 코드창에서 생각하고 그리는 연습이 필요한데 어케함?? 
        #먼저, 상담일수가 정해져있음
        # 다른상담을 하는 도중에는 새로운 상담을 할 수 없음
        # 각 날짜마다 최적을 골라서 누적수익을 최대화하는거니까 dp
        # 매일 상담이 하나씩 있는데 Ti가 있음. 그니깐 돈들어오는 날이 다름.
        # Ti를 각 루프마다 확인해서, 돈 받는날에 더 많이 받는걸로 update
        # 그리고 dp는 어제랑 오늘이랑 max 해서 최대값이 계속 이어지게.
        # 현재날짜+Ti -1(상담완료날짜) 가 끝나는날 넘어가는지도 확인해야함.
        
        #오늘 날짜 : i
        # 오늘 예약의 index : i
        
        # 당장 오늘 받을 돈.
        #여태 받았던 돈은 유지해야하니까, 어제꺼랑 오늘꺼랑 받은돈 비교해서 더 큰거 남겨놓으면 됨.
        # 만약 현재 날짜에 잡을 수 있는 예약이 근무일자를 안넘기면
            # 오늘부터 받는날까지 일해야 하는거니까, 받는날 받을 돈에 어제까지 일했던거 에다가 오늘 잡는 예약의 가격을 추가하거나.
            # 아니면 그냥 원래 받을 예정이었던걸 그대로 쓰거나.
            
#init.
import sys

input = sys.stdin.readline
N = int(input())
t, p = [0] * (N + 1) , [0] * (N + 1)

for i in range(1,N + 1):
    t[i], p[i] = map(int, input().split())
    
# def algo
def max_profit(N, t, p) :
    dp = [0] * (N + 1)
    # dp is max value.
    for i in range(1, N + 1):
        dp[i] = max(dp[i], dp[i-1])
        
        endDate = t[i] + i - 1 # 1부터 시작이라 -1 해줘야함.
        if endDate <= N :
            dp[endDate] = max(dp[i - 1] + p[i] , dp[endDate])
        
    return dp[N]

print(max_profit(N,t,p))

# 이거 자꾸 채점중(1%)에서 시간초과 뜨는데
# 블로그 복붙한 이거는 안떠. 왜지?

# 퇴사 2
import sys
input = sys.stdin.readline

N = int(input())
dp = list(0 for _ in range(N+1))

for now in range(N):
    T,P = map(int,input().split(' '))
    
    dp[now+1] = max(dp[now+1],dp[now])    
    if now + T < N+1 :
        dp[now+T] = max(dp[now+T],dp[now]+P)

print(dp[-1])

# 아 시발 
# import sys
# input = sys.stdin.readline
# 이거 쓰면 됨..